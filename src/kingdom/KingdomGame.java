/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kingdom;

import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import kingdom.actions.InnerCity;
import kingdom.actions.OuterCity;
import kingdom.actions.Trading;

/**
 *
 * @author Eric
 */
public class KingdomGame extends javax.swing.JFrame implements MouseListener {

    /**
     * Creates new form KingdomFrame
     */
    public KingdomGame() {

        initComponents();
        this.addMouseListener(this);

        CursorSet(false);

        InnerCityGlow.setVisible(false);
        PalaceGlow.setVisible(false);
        TradeDistrictGlow.setVisible(false);
        QuarterWealthGlow.setVisible(false);
        TowerGlow.setVisible(false);

        PalaceLayout.setVisible(false);

        InnerCityLayout.setVisible(false);
        OuterCityLayout.setVisible(false);
        QuarterOfWealth.setVisible(false);
        TradingDistrictLayout.setVisible(false);

        waitThread.start();
        GameLoop.start();

        ToggleScroll(scrollTitle, ScrollOut, ScrollIn, scrollBar1, DayLabel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TradingDistrictLayout = new javax.swing.JPanel();
        tdBackArrow = new javax.swing.JButton();
        capabilitiesButton = new javax.swing.JButton();
        tdScrollPane = new javax.swing.JScrollPane();
        tdTextWindow = new javax.swing.JTextArea();
        opinionButton = new javax.swing.JButton();
        talkMerchantButton = new javax.swing.JButton();
        backgroundTrading = new javax.swing.JLabel();
        InnerCityLayout = new javax.swing.JPanel();
        icScrollPane = new javax.swing.JScrollPane();
        icTextWindow = new javax.swing.JTextArea();
        giveMoneyValidate = new javax.swing.JButton();
        moneyAmountBox = new javax.swing.JTextField();
        talkGuardButton = new javax.swing.JButton();
        giveMoneyButton = new javax.swing.JButton();
        employButton = new javax.swing.JButton();
        povertyButton = new javax.swing.JButton();
        icBackArrow = new javax.swing.JButton();
        crimeButton = new javax.swing.JButton();
        backgroundInnerCity = new javax.swing.JLabel();
        PalaceLayout = new javax.swing.JPanel();
        backArrow1 = new javax.swing.JButton();
        backgroundPalace = new javax.swing.JLabel();
        ZoomedLayout1 = new javax.swing.JPanel();
        hovGlow = new javax.swing.JButton();
        hovGlow1 = new javax.swing.JButton();
        hovGlow2 = new javax.swing.JButton();
        backGlow = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        ZoomedLayout2 = new javax.swing.JPanel();
        DayLabel = new javax.swing.JLabel();
        toggleScroll = new javax.swing.JButton();
        scrollTitle = new javax.swing.JLabel();
        scrollBar1 = new javax.swing.JLabel();
        ScrollIn = new javax.swing.JLabel();
        ScrollOut = new javax.swing.JLabel();
        backArrow = new javax.swing.JButton();
        Palace = new javax.swing.JButton();
        Tower1 = new javax.swing.JButton();
        InnerCity1 = new javax.swing.JButton();
        InnerCity2 = new javax.swing.JButton();
        Quarter2 = new javax.swing.JButton();
        Quarter1 = new javax.swing.JButton();
        Trade1 = new javax.swing.JButton();
        TowerGlow = new javax.swing.JLabel();
        TradeDistrictGlow = new javax.swing.JLabel();
        QuarterWealthGlow = new javax.swing.JLabel();
        InnerCityGlow = new javax.swing.JLabel();
        PalaceGlow = new javax.swing.JLabel();
        backgroundZoomed = new javax.swing.JLabel();
        QuarterOfWealth = new javax.swing.JPanel();
        backArrow4 = new javax.swing.JButton();
        backgroundQuarter = new javax.swing.JLabel();
        OuterCityLayout = new javax.swing.JPanel();
        ocBackArrow = new javax.swing.JButton();
        backgroundOuterCity = new javax.swing.JLabel();
        agButton = new javax.swing.JButton();
        ocScrollPane = new javax.swing.JScrollPane();
        ocTextWindow = new javax.swing.JTextArea();
        weatherButton = new javax.swing.JButton();
        talkFarmerButton = new javax.swing.JButton();
        loadingScreen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setFocusable(false);
        setMinimumSize(new java.awt.Dimension(1200, 800));
        setResizable(false);

        TradingDistrictLayout.setMinimumSize(new java.awt.Dimension(1200, 800));
        TradingDistrictLayout.setPreferredSize(new java.awt.Dimension(1200, 800));
        TradingDistrictLayout.setLayout(null);

        tdBackArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.png"))); // NOI18N
        tdBackArrow.setContentAreaFilled(false);
        tdBackArrow.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        tdBackArrow.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        tdBackArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tdBackArrowActionPerformed(evt);
            }
        });
        TradingDistrictLayout.add(tdBackArrow);
        tdBackArrow.setBounds(30, 20, 80, 60);

        capabilitiesButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        capabilitiesButton.setText("How are we doing");
        capabilitiesButton.setFocusable(false);
        capabilitiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                capabilitiesButtonActionPerformed(evt);
            }
        });
        TradingDistrictLayout.add(capabilitiesButton);
        capabilitiesButton.setBounds(340, 530, 190, 70);
        capabilitiesButton.setVisible(false);

        tdScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        tdScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        tdScrollPane.setFocusable(false);
        tdScrollPane.setOpaque(false);
        tdScrollPane.setRequestFocusEnabled(false);
        tdScrollPane.setWheelScrollingEnabled(false);

        tdTextWindow.setEditable(false);
        tdTextWindow.setColumns(20);
        tdTextWindow.setFont(new java.awt.Font("Mongolian Baiti", 0, 24)); // NOI18N
        tdTextWindow.setRows(500);
        tdTextWindow.setWrapStyleWord(true);
        tdTextWindow.setAutoscrolls(false);
        tdTextWindow.setFocusable(false);
        tdTextWindow.setOpaque(false);
        tdTextWindow.setRequestFocusEnabled(false);
        tdTextWindow.setVerifyInputWhenFocusTarget(false);
        tdScrollPane.setViewportView(tdTextWindow);
        icTextWindow.setLineWrap(true);

        TradingDistrictLayout.add(tdScrollPane);
        tdScrollPane.setBounds(340, 300, 580, 210);

        opinionButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        opinionButton.setText("Give me your opinion");
        opinionButton.setFocusable(false);
        opinionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opinionButtonActionPerformed(evt);
            }
        });
        TradingDistrictLayout.add(opinionButton);
        opinionButton.setBounds(710, 530, 210, 70);
        opinionButton.setVisible(false);

        talkMerchantButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        talkMerchantButton.setText("Talk to Merchant");
        talkMerchantButton.setFocusable(false);
        talkMerchantButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talkMerchantButtonActionPerformed(evt);
            }
        });
        TradingDistrictLayout.add(talkMerchantButton);
        talkMerchantButton.setBounds(530, 530, 210, 70);

        backgroundTrading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/bckground_gifs/trading_district/trading_district_GIF org.gif"))); // NOI18N
        backgroundTrading.setMaximumSize(new java.awt.Dimension(1200, 780));
        backgroundTrading.setMinimumSize(new java.awt.Dimension(1200, 780));
        backgroundTrading.setPreferredSize(new java.awt.Dimension(1200, 780));
        TradingDistrictLayout.add(backgroundTrading);
        backgroundTrading.setBounds(0, 0, 1200, 780);

        InnerCityLayout.setMinimumSize(new java.awt.Dimension(1200, 800));
        InnerCityLayout.setPreferredSize(new java.awt.Dimension(1200, 800));
        InnerCityLayout.setLayout(null);

        icScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        icScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        icScrollPane.setFocusable(false);
        icScrollPane.setOpaque(false);
        icScrollPane.setRequestFocusEnabled(false);
        icScrollPane.setWheelScrollingEnabled(false);

        icTextWindow.setEditable(false);
        icTextWindow.setColumns(20);
        icTextWindow.setFont(new java.awt.Font("Mongolian Baiti", 0, 24)); // NOI18N
        icTextWindow.setRows(500);
        icTextWindow.setWrapStyleWord(true);
        icTextWindow.setAutoscrolls(false);
        icTextWindow.setFocusable(false);
        icTextWindow.setOpaque(false);
        icTextWindow.setRequestFocusEnabled(false);
        icTextWindow.setVerifyInputWhenFocusTarget(false);
        icScrollPane.setViewportView(icTextWindow);
        icTextWindow.setLineWrap(true);

        InnerCityLayout.add(icScrollPane);
        icScrollPane.setBounds(340, 300, 580, 210);

        giveMoneyValidate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        giveMoneyValidate.setText("Give Money");
        giveMoneyValidate.setFocusable(false);
        giveMoneyValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giveMoneyValidateActionPerformed(evt);
            }
        });
        InnerCityLayout.add(giveMoneyValidate);
        giveMoneyValidate.setBounds(610, 530, 130, 70);
        giveMoneyValidate.setVisible(false);

        moneyAmountBox.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        moneyAmountBox.setText("0.00");
        InnerCityLayout.add(moneyAmountBox);
        moneyAmountBox.setBounds(520, 530, 90, 70);
        moneyAmountBox.setVisible(false);
        moneyAmountBox.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                if (moneyAmountBox.getText().length() >= 4 ) // limit textfield to 3 characters
                e.consume();
            }
        });

        moneyAmountBox.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE) && (c!= KeyEvent.VK_PERIOD)) {
                    e.consume();
                }

            }
        });

        talkGuardButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        talkGuardButton.setText("Talk to Royal Guard");
        talkGuardButton.setFocusable(false);
        talkGuardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talkGuardButtonActionPerformed(evt);
            }
        });
        InnerCityLayout.add(talkGuardButton);
        talkGuardButton.setBounds(410, 530, 210, 70);

        giveMoneyButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        giveMoneyButton.setText("Give Money to Poor");
        giveMoneyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giveMoneyButtonActionPerformed(evt);
            }
        });
        InnerCityLayout.add(giveMoneyButton);
        giveMoneyButton.setBounds(660, 530, 210, 70);

        employButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        employButton.setText("Employment?");
        employButton.setFocusable(false);
        employButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employButtonActionPerformed(evt);
            }
        });
        InnerCityLayout.add(employButton);
        employButton.setBounds(780, 530, 140, 70);
        employButton.setVisible(false);

        povertyButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        povertyButton.setText("How's Poverty?");
        povertyButton.setFocusable(false);
        povertyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                povertyButtonActionPerformed(evt);
            }
        });
        InnerCityLayout.add(povertyButton);
        povertyButton.setBounds(340, 530, 160, 70);
        povertyButton.setVisible(false);

        icBackArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.png"))); // NOI18N
        icBackArrow.setContentAreaFilled(false);
        icBackArrow.setFocusable(false);
        icBackArrow.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        icBackArrow.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        icBackArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                icBackArrowActionPerformed(evt);
            }
        });
        InnerCityLayout.add(icBackArrow);
        icBackArrow.setBounds(30, 20, 80, 60);

        crimeButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        crimeButton.setText("How's Crime?");
        crimeButton.setFocusable(false);
        crimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crimeButtonActionPerformed(evt);
            }
        });
        InnerCityLayout.add(crimeButton);
        crimeButton.setBounds(570, 530, 140, 70);
        crimeButton.setVisible(false);

        backgroundInnerCity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/bckground_gifs/inner_city/inner_city_GIF.gif"))); // NOI18N
        InnerCityLayout.add(backgroundInnerCity);
        backgroundInnerCity.setBounds(0, 0, 1200, 800);

        PalaceLayout.setMinimumSize(new java.awt.Dimension(1200, 800));
        PalaceLayout.setPreferredSize(new java.awt.Dimension(1200, 800));
        PalaceLayout.setLayout(null);

        backArrow1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.png"))); // NOI18N
        backArrow1.setContentAreaFilled(false);
        backArrow1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        backArrow1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        backArrow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backArrow1ActionPerformed(evt);
            }
        });
        PalaceLayout.add(backArrow1);
        backArrow1.setBounds(30, 20, 80, 60);

        backgroundPalace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/bckground_gifs/palace/royal_palace1_GIF.gif"))); // NOI18N
        backgroundPalace.setMaximumSize(new java.awt.Dimension(1200, 800));
        backgroundPalace.setMinimumSize(new java.awt.Dimension(1200, 800));
        backgroundPalace.setPreferredSize(new java.awt.Dimension(1200, 800));
        PalaceLayout.add(backgroundPalace);
        backgroundPalace.setBounds(0, -20, 1200, 820);

        ZoomedLayout1.setMinimumSize(new java.awt.Dimension(1200, 800));
        ZoomedLayout1.setPreferredSize(new java.awt.Dimension(1200, 800));
        ZoomedLayout1.setLayout(null);

        hovGlow.setBorderPainted(false);
        hovGlow.setContentAreaFilled(false);
        hovGlow.setFocusable(false);
        hovGlow.setRequestFocusEnabled(false);
        hovGlow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hovGlowMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hovGlowMouseExited(evt);
            }
        });
        hovGlow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hovGlowActionPerformed(evt);
            }
        });
        ZoomedLayout1.add(hovGlow);
        hovGlow.setBounds(50, 180, 180, 270);

        hovGlow1.setBorderPainted(false);
        hovGlow1.setContentAreaFilled(false);
        hovGlow1.setDefaultCapable(false);
        hovGlow1.setFocusable(false);
        hovGlow1.setRequestFocusEnabled(false);
        hovGlow1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hovGlow1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hovGlow1MouseExited(evt);
            }
        });
        hovGlow1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hovGlow1ActionPerformed(evt);
            }
        });
        ZoomedLayout1.add(hovGlow1);
        hovGlow1.setBounds(390, 160, 230, 230);

        hovGlow2.setBorderPainted(false);
        hovGlow2.setContentAreaFilled(false);
        hovGlow2.setFocusable(false);
        hovGlow2.setRequestFocusEnabled(false);
        hovGlow2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hovGlow2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                hovGlow2MouseExited(evt);
            }
        });
        hovGlow2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hovGlow2ActionPerformed(evt);
            }
        });
        ZoomedLayout1.add(hovGlow2);
        hovGlow2.setBounds(200, 160, 260, 310);

        backGlow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/glows/layout.zo.glow.png"))); // NOI18N
        ZoomedLayout1.add(backGlow);
        backGlow.setBounds(0, 0, 1200, 780);
        backGlow.setVisible(false);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/kingdom.layout1.gif"))); // NOI18N
        ZoomedLayout1.add(background);
        background.setBounds(0, 0, 1200, 780);

        ZoomedLayout2.setMinimumSize(new java.awt.Dimension(1200, 800));
        ZoomedLayout2.setPreferredSize(new java.awt.Dimension(1200, 800));
        ZoomedLayout2.setLayout(null);

        DayLabel.setFont(new java.awt.Font("Script MT Bold", 1, 48)); // NOI18N
        DayLabel.setText("Day ");
        ZoomedLayout2.add(DayLabel);
        DayLabel.setBounds(960, 90, 180, 70);
        DayLabel.setVisible(false);

        toggleScroll.setBorderPainted(false);
        toggleScroll.setContentAreaFilled(false);
        toggleScroll.setName(""); // NOI18N
        toggleScroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleScrollActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(toggleScroll);
        toggleScroll.setBounds(860, 20, 340, 70);

        scrollTitle.setFont(new java.awt.Font("Script MT Bold", 1, 48)); // NOI18N
        scrollTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        scrollTitle.setText("Kingdom Name");
        ZoomedLayout2.add(scrollTitle);
        scrollTitle.setBounds(860, 20, 340, 80);

        scrollBar1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        scrollBar1.setText("__________________________________");
        ZoomedLayout2.add(scrollBar1);
        scrollBar1.setBounds(871, 70, 370, 22);

        ScrollIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/misc/scroll.overlay.in.png"))); // NOI18N
        ZoomedLayout2.add(ScrollIn);
        ScrollIn.setBounds(820, -20, 380, 130);
        ScrollIn.setVisible(false);

        ScrollOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/misc/scroll.overlay.out.png"))); // NOI18N
        ScrollOut.setToolTipText(null);
        ZoomedLayout2.add(ScrollOut);
        ScrollOut.setBounds(820, -20, 390, 900);

        backArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.png"))); // NOI18N
        backArrow.setContentAreaFilled(false);
        backArrow.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        backArrow.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        backArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backArrowActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(backArrow);
        backArrow.setBounds(30, 20, 80, 60);

        Palace.setContentAreaFilled(false);
        Palace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                PalaceMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                PalaceMouseExited(evt);
            }
        });
        Palace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PalaceActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(Palace);
        Palace.setBounds(630, 130, 90, 90);

        Tower1.setContentAreaFilled(false);
        Tower1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Tower1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Tower1MouseExited(evt);
            }
        });
        Tower1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tower1ActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(Tower1);
        Tower1.setBounds(230, 360, 150, 120);

        InnerCity1.setContentAreaFilled(false);
        InnerCity1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                InnerCity1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                InnerCity1MouseExited(evt);
            }
        });
        InnerCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InnerCity1ActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(InnerCity1);
        InnerCity1.setBounds(600, 210, 130, 100);

        InnerCity2.setContentAreaFilled(false);
        InnerCity2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                InnerCity2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                InnerCity2MouseExited(evt);
            }
        });
        InnerCity2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InnerCity2ActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(InnerCity2);
        InnerCity2.setBounds(520, 190, 90, 100);

        Quarter2.setContentAreaFilled(false);
        Quarter2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarter2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarter2MouseExited(evt);
            }
        });
        Quarter2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quarter2ActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(Quarter2);
        Quarter2.setBounds(460, 170, 90, 90);

        Quarter1.setContentAreaFilled(false);
        Quarter1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Quarter1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Quarter1MouseExited(evt);
            }
        });
        Quarter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quarter1ActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(Quarter1);
        Quarter1.setBounds(370, 230, 120, 100);

        Trade1.setContentAreaFilled(false);
        Trade1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Trade1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Trade1MouseExited(evt);
            }
        });
        Trade1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Trade1ActionPerformed(evt);
            }
        });
        ZoomedLayout2.add(Trade1);
        Trade1.setBounds(370, 310, 250, 90);

        TowerGlow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/glows/glow.Tower.png"))); // NOI18N
        ZoomedLayout2.add(TowerGlow);
        TowerGlow.setBounds(20, -110, 1010, 750);
        PalaceGlow.setVisible(false);

        TradeDistrictGlow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/glows/glow.Trade.png"))); // NOI18N
        ZoomedLayout2.add(TradeDistrictGlow);
        TradeDistrictGlow.setBounds(10, -80, 1010, 750);
        PalaceGlow.setVisible(false);

        QuarterWealthGlow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/glows/glow.Quarter.png"))); // NOI18N
        ZoomedLayout2.add(QuarterWealthGlow);
        QuarterWealthGlow.setBounds(0, -30, 1010, 750);
        PalaceGlow.setVisible(false);

        InnerCityGlow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/glows/glow.innerCity.png"))); // NOI18N
        ZoomedLayout2.add(InnerCityGlow);
        InnerCityGlow.setBounds(0, -40, 1010, 750);
        PalaceGlow.setVisible(false);

        PalaceGlow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/glows/glow.Palace.png"))); // NOI18N
        ZoomedLayout2.add(PalaceGlow);
        PalaceGlow.setBounds(-10, 20, 1010, 750);
        PalaceGlow.setVisible(false);

        backgroundZoomed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/backs/kingdom.layout2.gif"))); // NOI18N
        ZoomedLayout2.add(backgroundZoomed);
        backgroundZoomed.setBounds(0, 0, 1200, 780);

        QuarterOfWealth.setMinimumSize(new java.awt.Dimension(1200, 800));
        QuarterOfWealth.setPreferredSize(new java.awt.Dimension(1200, 800));
        QuarterOfWealth.setLayout(null);

        backArrow4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.png"))); // NOI18N
        backArrow4.setContentAreaFilled(false);
        backArrow4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        backArrow4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        backArrow4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backArrow4ActionPerformed(evt);
            }
        });
        QuarterOfWealth.add(backArrow4);
        backArrow4.setBounds(30, 20, 80, 60);

        backgroundQuarter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/bckground_gifs/quarter_wealth/quarter_wealth_GIF_org.gif"))); // NOI18N
        QuarterOfWealth.add(backgroundQuarter);
        backgroundQuarter.setBounds(0, 0, 1200, 800);

        OuterCityLayout.setMinimumSize(new java.awt.Dimension(1200, 800));
        OuterCityLayout.setPreferredSize(new java.awt.Dimension(1200, 800));
        OuterCityLayout.setLayout(null);

        ocBackArrow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.png"))); // NOI18N
        ocBackArrow.setContentAreaFilled(false);
        ocBackArrow.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        ocBackArrow.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/buttons/small.arrow.hover.png"))); // NOI18N
        ocBackArrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ocBackArrowActionPerformed(evt);
            }
        });
        OuterCityLayout.add(ocBackArrow);
        ocBackArrow.setBounds(30, 20, 80, 60);

        backgroundOuterCity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/bckground_gifs/outer_city/outer_city_GIF.gif"))); // NOI18N
        backgroundOuterCity.setMaximumSize(new java.awt.Dimension(1200, 780));
        backgroundOuterCity.setMinimumSize(new java.awt.Dimension(1200, 780));
        backgroundOuterCity.setPreferredSize(new java.awt.Dimension(1200, 780));
        OuterCityLayout.add(backgroundOuterCity);
        backgroundOuterCity.setBounds(0, 0, 1200, 780);

        agButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        agButton.setText("How's Poverty?");
        agButton.setFocusable(false);
        agButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agButtonActionPerformed(evt);
            }
        });
        OuterCityLayout.add(agButton);
        agButton.setBounds(340, 530, 160, 70);
        agButton.setVisible(false);

        ocScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ocScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        ocScrollPane.setFocusable(false);
        ocScrollPane.setOpaque(false);
        ocScrollPane.setRequestFocusEnabled(false);
        ocScrollPane.setWheelScrollingEnabled(false);

        ocTextWindow.setEditable(false);
        ocTextWindow.setColumns(20);
        ocTextWindow.setFont(new java.awt.Font("Mongolian Baiti", 0, 24)); // NOI18N
        ocTextWindow.setRows(500);
        ocTextWindow.setWrapStyleWord(true);
        ocTextWindow.setAutoscrolls(false);
        ocTextWindow.setFocusable(false);
        ocTextWindow.setOpaque(false);
        ocTextWindow.setRequestFocusEnabled(false);
        ocTextWindow.setVerifyInputWhenFocusTarget(false);
        ocScrollPane.setViewportView(ocTextWindow);
        icTextWindow.setLineWrap(true);

        OuterCityLayout.add(ocScrollPane);
        ocScrollPane.setBounds(340, 300, 580, 210);

        weatherButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        weatherButton.setText("Employment?");
        weatherButton.setFocusable(false);
        weatherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                weatherButtonActionPerformed(evt);
            }
        });
        OuterCityLayout.add(weatherButton);
        weatherButton.setBounds(780, 530, 140, 70);
        weatherButton.setVisible(false);

        talkFarmerButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        talkFarmerButton.setText("Talk to Royal Guard");
        talkFarmerButton.setFocusable(false);
        talkFarmerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                talkFarmerButtonActionPerformed(evt);
            }
        });
        OuterCityLayout.add(talkFarmerButton);
        talkFarmerButton.setBounds(410, 530, 210, 70);

        loadingScreen.setFont(new java.awt.Font("Trebuchet MS", 1, 48)); // NOI18N
        loadingScreen.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loadingScreen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kingdom/images/misc/loading.gif"))); // NOI18N
        loadingScreen.setMaximumSize(new java.awt.Dimension(1200, 800));
        loadingScreen.setMinimumSize(new java.awt.Dimension(1200, 800));
        loadingScreen.setPreferredSize(new java.awt.Dimension(1200, 800));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ZoomedLayout1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ZoomedLayout2, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PalaceLayout, javax.swing.GroupLayout.PREFERRED_SIZE, 1200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loadingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InnerCityLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(OuterCityLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(QuarterOfWealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(TradingDistrictLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ZoomedLayout1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(ZoomedLayout2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(PalaceLayout, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(loadingScreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(InnerCityLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(OuterCityLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(QuarterOfWealth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(TradingDistrictLayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        ZoomedLayout2.setVisible(false);
        loadingScreen.setBounds(0,0,loadingScreen.getWidth(),loadingScreen.getHeight());

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hovGlowMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hovGlowMouseEntered

        backGlow.setVisible(true);
    }//GEN-LAST:event_hovGlowMouseEntered

    private void hovGlowMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hovGlowMouseExited
        backGlow.setVisible(false);
    }//GEN-LAST:event_hovGlowMouseExited

    private void hovGlow1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hovGlow1MouseEntered
        backGlow.setVisible(true);
    }//GEN-LAST:event_hovGlow1MouseEntered

    private void hovGlow1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hovGlow1MouseExited
        backGlow.setVisible(false);
    }//GEN-LAST:event_hovGlow1MouseExited

    private void hovGlow2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hovGlow2MouseEntered
        backGlow.setVisible(true);
    }//GEN-LAST:event_hovGlow2MouseEntered

    private void hovGlow2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hovGlow2MouseExited
        backGlow.setVisible(false);
    }//GEN-LAST:event_hovGlow2MouseExited

    private void hovGlow2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hovGlow2ActionPerformed
        SwitchPanel(ZoomedLayout1, ZoomedLayout2);

    }//GEN-LAST:event_hovGlow2ActionPerformed

    private void hovGlowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hovGlowActionPerformed
        SwitchPanel(ZoomedLayout1, ZoomedLayout2);
    }//GEN-LAST:event_hovGlowActionPerformed

    private void hovGlow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hovGlow1ActionPerformed
        SwitchPanel(ZoomedLayout1, ZoomedLayout2);

    }//GEN-LAST:event_hovGlow1ActionPerformed

    private void PalaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PalaceActionPerformed

        SwitchPanel(ZoomedLayout2, PalaceLayout);

    }//GEN-LAST:event_PalaceActionPerformed

    private void PalaceMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PalaceMouseEntered
        PalaceGlow.setVisible(true);
    }//GEN-LAST:event_PalaceMouseEntered

    private void PalaceMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PalaceMouseExited
        PalaceGlow.setVisible(false);
    }//GEN-LAST:event_PalaceMouseExited

    private void InnerCity1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InnerCity1MouseEntered

        InnerCityGlow.setVisible(true);
    }//GEN-LAST:event_InnerCity1MouseEntered

    private void InnerCity1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InnerCity1MouseExited


InnerCityGlow.setVisible(false);InnerCityGlow.setVisible(false);    }//GEN-LAST:event_InnerCity1MouseExited

    private void InnerCity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InnerCity1ActionPerformed

        SwitchPanel(ZoomedLayout2, InnerCityLayout);

    }//GEN-LAST:event_InnerCity1ActionPerformed

    private void InnerCity2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InnerCity2MouseEntered
InnerCityGlow.setVisible(true);    }//GEN-LAST:event_InnerCity2MouseEntered

    private void InnerCity2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InnerCity2MouseExited
InnerCityGlow.setVisible(false);    }//GEN-LAST:event_InnerCity2MouseExited

    private void InnerCity2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InnerCity2ActionPerformed

        SwitchPanel(ZoomedLayout2, InnerCityLayout);

    }//GEN-LAST:event_InnerCity2ActionPerformed

    private void Quarter1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarter1MouseEntered
        QuarterWealthGlow.setVisible(true);
    }//GEN-LAST:event_Quarter1MouseEntered

    private void Quarter1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarter1MouseExited
QuarterWealthGlow.setVisible(false);    }//GEN-LAST:event_Quarter1MouseExited

    private void Quarter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quarter1ActionPerformed
        SwitchPanel(ZoomedLayout2, QuarterOfWealth);

    }//GEN-LAST:event_Quarter1ActionPerformed

    private void Quarter2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarter2MouseEntered
QuarterWealthGlow.setVisible(true);    }//GEN-LAST:event_Quarter2MouseEntered

    private void Quarter2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Quarter2MouseExited
QuarterWealthGlow.setVisible(false);    }//GEN-LAST:event_Quarter2MouseExited

    private void Quarter2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quarter2ActionPerformed
        SwitchPanel(ZoomedLayout2, QuarterOfWealth);

    }//GEN-LAST:event_Quarter2ActionPerformed

    private void Trade1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Trade1MouseEntered
TradeDistrictGlow.setVisible(true);    }//GEN-LAST:event_Trade1MouseEntered

    private void Trade1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Trade1MouseExited
TradeDistrictGlow.setVisible(false);    }//GEN-LAST:event_Trade1MouseExited

    private void Trade1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Trade1ActionPerformed
        SwitchPanel(ZoomedLayout2, TradingDistrictLayout);

    }//GEN-LAST:event_Trade1ActionPerformed

    private void Tower1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tower1MouseEntered
TowerGlow.setVisible(true);    }//GEN-LAST:event_Tower1MouseEntered

    private void Tower1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tower1MouseExited
TowerGlow.setVisible(false);    }//GEN-LAST:event_Tower1MouseExited

    private void Tower1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tower1ActionPerformed


    }//GEN-LAST:event_Tower1ActionPerformed

    private void backArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backArrowActionPerformed
        SwitchPanel(ZoomedLayout2, ZoomedLayout1);
    }//GEN-LAST:event_backArrowActionPerformed

    private void toggleScrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleScrollActionPerformed
        ToggleScroll(scrollTitle, ScrollOut, ScrollIn, scrollBar1, DayLabel);

    }//GEN-LAST:event_toggleScrollActionPerformed

    private void backArrow1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backArrow1ActionPerformed
        SwitchPanel(PalaceLayout, ZoomedLayout2);
    }//GEN-LAST:event_backArrow1ActionPerformed

    private void icBackArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_icBackArrowActionPerformed

        SwitchPanel(InnerCityLayout, ZoomedLayout2);

        moneyAmountBox.setVisible(false);
        giveMoneyValidate.setVisible(false);
        talkGuardButton.setVisible(true);
        giveMoneyButton.setVisible(true);
        moneyAmountBox.setVisible(false);
        employButton.setVisible(false);
        povertyButton.setVisible(false);
        crimeButton.setVisible(false);
        icTextWindow.setText("");


    }//GEN-LAST:event_icBackArrowActionPerformed

    private void ocBackArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ocBackArrowActionPerformed
        SwitchPanel(OuterCityLayout, ZoomedLayout2);
        agButton.setVisible(false);
        weatherButton.setVisible(false);
        talkFarmerButton.setVisible(true);
    }//GEN-LAST:event_ocBackArrowActionPerformed

    private void backArrow4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backArrow4ActionPerformed
        SwitchPanel(QuarterOfWealth, ZoomedLayout2);
    }//GEN-LAST:event_backArrow4ActionPerformed

    private void tdBackArrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tdBackArrowActionPerformed
        SwitchPanel(TradingDistrictLayout, ZoomedLayout2);
        capabilitiesButton.setVisible(false);
        opinionButton.setVisible(false);
        talkMerchantButton.setVisible(true);
    }//GEN-LAST:event_tdBackArrowActionPerformed

    private void talkGuardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talkGuardButtonActionPerformed

        icTextWindow.setText("");
        employButton.setVisible(true);
        povertyButton.setVisible(true);
        crimeButton.setVisible(true);

        icTextWindow.setText(text.RandomGuardGreet(nameKing));
        talkGuardButton.setVisible(false);
        giveMoneyButton.setVisible(false);


    }//GEN-LAST:event_talkGuardButtonActionPerformed

    private void giveMoneyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giveMoneyButtonActionPerformed
        talkGuardButton.setVisible(false);
        giveMoneyButton.setVisible(false);

        moneyAmountBox.setVisible(true);
        giveMoneyValidate.setVisible(true);

        icTextWindow.append(TextUpdates.PoorPersonDialogue(nameKing, 0, false) + "\n");
        moneyAmountBox.setText("0.00");

    }//GEN-LAST:event_giveMoneyButtonActionPerformed

    private void giveMoneyValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giveMoneyValidateActionPerformed
        try {
            InnerCity.GiveToPoor(Double.parseDouble(moneyAmountBox.getText()));

            moneyAmountBox.setVisible(false);
            giveMoneyValidate.setVisible(false);

            int howBig = 0;
            if (Double.parseDouble(moneyAmountBox.getText()) > 1.00) {
                howBig = 3;
            }
            if (Double.parseDouble(moneyAmountBox.getText()) > 0.30 && Double.parseDouble(moneyAmountBox.getText()) <= 1.00) {
                howBig = 2;
            }
            if (Double.parseDouble(moneyAmountBox.getText()) <= 0.3) {
                howBig = 1;
            }
            icTextWindow.append(TextUpdates.PoorPersonDialogue(nameKing, howBig, true) + "\n");

            giveMoneyButton.setVisible(true);
            talkGuardButton.setVisible(true);

            moneyAmountBox.setText("0.00");
        } catch (Exception e) {

//NOT FORMATTED CORRECTLY !
            moneyAmountBox.setText("0.00");
        }


    }//GEN-LAST:event_giveMoneyValidateActionPerformed

    private void povertyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_povertyButtonActionPerformed
        icTextWindow.append("\n" + InnerCity.getPovertyStat());

    }//GEN-LAST:event_povertyButtonActionPerformed

    private void employButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employButtonActionPerformed
        icTextWindow.append("\n" + InnerCity.getEmploymentStat());

    }//GEN-LAST:event_employButtonActionPerformed

    private void crimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crimeButtonActionPerformed
        icTextWindow.append("\n" + InnerCity.getCrimeStat());

    }//GEN-LAST:event_crimeButtonActionPerformed

    private void agButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agButtonActionPerformed
        ocTextWindow.append("\nThe agriculture is " + Variables.agStatus);
    }//GEN-LAST:event_agButtonActionPerformed

    private void weatherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_weatherButtonActionPerformed
        // TODO add your handling code here:
        ocTextWindow.append("\nIt has been " + OuterCity.getWeather() + " lately");
    }//GEN-LAST:event_weatherButtonActionPerformed

    private void talkFarmerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talkFarmerButtonActionPerformed
        ocTextWindow.setText(TextUpdates.randomFarmerGreet(nameKing));
        agButton.setVisible(true);
        weatherButton.setVisible(true);
        talkFarmerButton.setVisible(false);
    }//GEN-LAST:event_talkFarmerButtonActionPerformed

    private void capabilitiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_capabilitiesButtonActionPerformed
        // TODO add your handling code here:
        tdTextWindow.append("\nOur trading capability is " + Variables.tradingCapability);
    }//GEN-LAST:event_capabilitiesButtonActionPerformed

    private void opinionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opinionButtonActionPerformed
        tdTextWindow.append("\n"+Trading.getOpinion());
    }//GEN-LAST:event_opinionButtonActionPerformed

    private void talkMerchantButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_talkMerchantButtonActionPerformed
        // TODO add your handling code here:
        tdTextWindow.setText(TextUpdates.randomMerchantGreet(nameKing));
        capabilitiesButton.setVisible(true);
        opinionButton.setVisible(true);
        talkMerchantButton.setVisible(false);
    }//GEN-LAST:event_talkMerchantButtonActionPerformed

    public void CheckTextBoxes() {
        try {

            double input = Double.parseDouble(moneyAmountBox.getText());

            if (input < 0 || input > 9.99) {
                moneyAmountBox.setText("0");
                moneyAmountBox.setText("0.00");
            }

        } catch (Exception e) {

        }

    }

    GameSetup gamesetup = new GameSetup();
    TextUpdates text = new TextUpdates();

    boolean scrollIn = false;

    String nameKingdom;
    String nameKing;
    int Difficulty;

    public void setScrollTitle() {
        scrollTitle.setText(nameKingdom);
    }

    public void ToggleScroll(JLabel title, JLabel scrollout, JLabel scrollin, JLabel scrollbar, JLabel dayNum) {
        if (scrollIn == false) {
            scrollIn = true;
            scrollout.setVisible(false);
            scrollbar.setVisible(false);
            title.setVisible(false);
            dayNum.setVisible(false);

            scrollin.setVisible(true);
        } else {
            scrollIn = false;
            scrollout.setVisible(true);
            scrollbar.setVisible(true);
            title.setVisible(true);
            dayNum.setVisible(true);

            scrollin.setVisible(false);
        }
    }

    public void SwitchPanel(JPanel from, JPanel to) {

        from.setVisible(false);
        int rand = 250;

        waiting = rand;
        waitDone = 1;

        jReady = to;

    }

    Thread waitThread = new Thread(new Runnable() {

        public void run() {

            try {
                while (true) {

                    if (waiting > 0) {

                        loadingScreen.setVisible(true);
                        Thread.sleep(waiting);
                        waiting = 0;
                        if (waitDone == 1) {
                            loadingScreen.setVisible(false);
                            jReady.setVisible(true);
                            waitDone = 0;
                        }

                    }

                }
            } catch (InterruptedException ex) {
                Logger.getLogger(KingdomMenu.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    });

    Thread GameLoop = new Thread(new Runnable() {

        public void run() {

            while (true) {
                try {
                    Thread.sleep(1000);      //SLIGHT DELAY BEFORE UPDATING GAME COMPONENTS
                } catch (InterruptedException ex) {
                    Logger.getLogger(KingdomGame.class.getName()).log(Level.SEVERE, null, ex);
                }
                Variables.K_DayNum++;

                CheckTextBoxes();

                DayLabel.setText("Day " + Variables.K_DayNum);

            }

        }

    });

    public void CursorSet(boolean down) {
        String path = "";
        if (down == false) {
            path = "/kingdom/images/misc/med_cursor.png";
        }
        if (down == true) {
            path = "/kingdom/images/misc/med_cursor.png";
        }

        setCursor(Toolkit.getDefaultToolkit().createCustomCursor(
                new ImageIcon(getClass().getResource(path)).getImage(),
                new Point(0, 0), "custom cursor"));

    }
    public volatile int waiting = 0;
    public volatile int waitDone = 0;

    public volatile JPanel jReady = null;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DayLabel;
    private javax.swing.JButton InnerCity1;
    private javax.swing.JButton InnerCity2;
    private javax.swing.JLabel InnerCityGlow;
    private javax.swing.JPanel InnerCityLayout;
    private javax.swing.JPanel OuterCityLayout;
    private javax.swing.JButton Palace;
    private javax.swing.JLabel PalaceGlow;
    private javax.swing.JPanel PalaceLayout;
    private javax.swing.JButton Quarter1;
    private javax.swing.JButton Quarter2;
    private javax.swing.JPanel QuarterOfWealth;
    private javax.swing.JLabel QuarterWealthGlow;
    private javax.swing.JLabel ScrollIn;
    private javax.swing.JLabel ScrollOut;
    private javax.swing.JButton Tower1;
    private javax.swing.JLabel TowerGlow;
    private javax.swing.JButton Trade1;
    private javax.swing.JLabel TradeDistrictGlow;
    private javax.swing.JPanel TradingDistrictLayout;
    private javax.swing.JPanel ZoomedLayout1;
    private javax.swing.JPanel ZoomedLayout2;
    private javax.swing.JButton agButton;
    private javax.swing.JButton backArrow;
    private javax.swing.JButton backArrow1;
    private javax.swing.JButton backArrow4;
    private javax.swing.JLabel backGlow;
    private javax.swing.JLabel background;
    private javax.swing.JLabel backgroundInnerCity;
    private javax.swing.JLabel backgroundOuterCity;
    private javax.swing.JLabel backgroundPalace;
    private javax.swing.JLabel backgroundQuarter;
    private javax.swing.JLabel backgroundTrading;
    private javax.swing.JLabel backgroundZoomed;
    private javax.swing.JButton capabilitiesButton;
    private javax.swing.JButton crimeButton;
    private javax.swing.JButton employButton;
    private javax.swing.JButton giveMoneyButton;
    private javax.swing.JButton giveMoneyValidate;
    private javax.swing.JButton hovGlow;
    private javax.swing.JButton hovGlow1;
    private javax.swing.JButton hovGlow2;
    private javax.swing.JButton icBackArrow;
    private javax.swing.JScrollPane icScrollPane;
    private javax.swing.JTextArea icTextWindow;
    private javax.swing.JLabel loadingScreen;
    private javax.swing.JTextField moneyAmountBox;
    private javax.swing.JButton ocBackArrow;
    private javax.swing.JScrollPane ocScrollPane;
    private javax.swing.JTextArea ocTextWindow;
    private javax.swing.JButton opinionButton;
    private javax.swing.JButton povertyButton;
    private javax.swing.JLabel scrollBar1;
    private javax.swing.JLabel scrollTitle;
    private javax.swing.JButton talkFarmerButton;
    private javax.swing.JButton talkGuardButton;
    private javax.swing.JButton talkMerchantButton;
    private javax.swing.JButton tdBackArrow;
    private javax.swing.JScrollPane tdScrollPane;
    private javax.swing.JTextArea tdTextWindow;
    private javax.swing.JButton toggleScroll;
    private javax.swing.JButton weatherButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        CursorSet(false);
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    @Override
    public void mousePressed(MouseEvent e) {
        CursorSet(true);
    }

}
